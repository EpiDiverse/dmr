// PRIMARY NEXTFLOW.CONFIG

// DEFAULT PARAMETERS
params {

	// BASIC PARAMS
	help = false
	version = false
	debug = false

	// INPUT / OUTPUT
	input = "$PWD"
	samples = false
	output = "dmrs"

	// GENERAL PARAMS
	control = false
	dmp = false

	// METHYLATION CONTEXT
	noCpG = false
	noCHG = false
	noCHH = false

	// DMR CALLING
	cov = "5"
	gap = "146"
	CpN = "10"
	diff = "10"
	sig = "0.05"
	resample = "0.8"
	bonferroni = false
	segSize = "1000"
	segContext = "CHH"
}


// NEXTFLOW PROFILES
profiles {

	// -profile standard
	standard {
		includeConfig "${baseDir}/config/base.config"
	}

	// -profile conda
	conda {
		includeConfig "${baseDir}/config/base.config"
		process.conda = "$baseDir/env/environment.yml"
	}

	// -profile docker
	docker {
		includeConfig "${baseDir}/config/base.config"
		docker.enabled = true
		process.container = 'epidiverse/dmr'
	}

	// -profile singularity
	singularity {
		includeConfig "${baseDir}/config/base.config"
		singularity.enabled = true
		process.container = 'epidiverse/dmr'
	}


	// -profile test
	test {
		includeConfig "${baseDir}/config/base.config"
		includeConfig "${baseDir}/config/test.config"
	}

	// -profile epi
	epi {
		includeConfig "${baseDir}/config/base.config"
		process.conda='/scr/epi/pipelines/dmr/libs/dmr'
		process.executor='slurm'
		process.queue='crunch'
		includeConfig "${baseDir}/config/epidiverse.config"
	}

	// -profile diverse
	diverse {
		includeConfig "${baseDir}/config/base.config"
		process.conda='/scr/epi/pipelines/dmr/libs/dmr'
		process.executor='slurm'
		process.queue='test'
		includeConfig "${baseDir}/config/epidiverse.config"
	}

	// -profile custom
	custom {
		// Don't load any config (for use with custom home configs)
	}
}


// NEXTFLOW MANIFEST
manifest {
	homePage = "https://bitbucket.org/epidiverse/dmr"
	author = "Adam Nunn"
	description = "A pipeline for calling DMRs from the output of the EpiDiverse/wgbs pipeline"
	mainScript = "main.nf"
	version = "0.9.1dev"
	nextflowVersion = "19.09+"
}


// NEXTFLOW REPORTING
dag {
	enabled = true
	file = "${params.output}/dag.svg"
}
report {
	enabled = true
	file = "${params.output}/report.html"
}
timeline {
	enabled = true
	file = "${params.output}/timeline.html"
}
trace {
	enabled = true
	file = "${params.output}/trace.txt"
}